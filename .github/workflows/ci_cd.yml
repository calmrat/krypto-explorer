name: CI/CD Pipeline

on:
  push:
    branches: [f-cicd]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: qrypto
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7
        ports:
          - 6379:6379

    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v3

      - name: ⚙️ Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: 💾 Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | bash
          echo 'export PATH="$HOME/.local/bin:$PATH"' >> $GITHUB_ENV
          

      - name: 📦 Install dependencies
        run: |
          uv venv .venv
          source .venv/bin/activate
          echo 'export PATH=".venv/bin:$PATH"' >> $GITHUB_ENV
          echo $PATH
          pwd
          ls /home/runner/work/krypto-explorer/krypto-explorer/.venv/bin
          uv sync
          uv pip install -r pyproject.toml
          uv pip install -e .
          ls /home/runner/work/krypto-explorer/krypto-explorer/.venv/bin
          which pytest
          
      - name: 🔧 Wait for Postgres
        run: |
          until pg_isready -h localhost -U postgres; do sleep 1; done

      - name: 🧪 Run tests
        run: |
          pytest -v --maxfail=1

      # Optional coverage
      # - name: 📊 Upload coverage to Codecov
      #   uses: codecov/codecov-action@v3